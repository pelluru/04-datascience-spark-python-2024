statement ok
create source s1 (v1 int, v2 varchar) with (
  connector = 'kafka',
  topic = 'kafka_1_partition_topic',
  properties.bootstrap.server = 'message_queue:29092',
  scan.startup.mode = 'earliest'
) FORMAT PLAIN ENCODE JSON

statement ok
create source s2 (v1 int, v2 varchar) with (
  connector = 'kafka',
  topic = 'kafka_2_partition_topic',
  properties.bootstrap.server = 'message_queue:29092',
  scan.startup.mode = 'earliest'
) FORMAT PLAIN ENCODE JSON

statement ok
create source s3 (v1 int, v2 varchar) with (
  connector = 'kafka',
  topic = 'kafka_3_partition_topic',
  properties.bootstrap.server = 'message_queue:29092',
  scan.startup.mode = 'earliest'
) FORMAT PLAIN ENCODE JSON

statement ok
create source s4 (v1 int, v2 varchar) with (
  connector = 'kafka',
  topic = 'kafka_4_partition_topic',
  properties.bootstrap.server = 'message_queue:29092',
  scan.startup.mode = 'earliest'
) FORMAT PLAIN ENCODE JSON

statement ok
create table s5 (v1 int, v2 varchar) with (
  connector = 'kafka',
  topic = 'kafka_4_partition_topic_with_100_message',
  properties.bootstrap.server = 'message_queue:29092',
  scan.startup.mode = 'earliest'
) FORMAT PLAIN ENCODE JSON

statement ok
create source s6 (v1 int, v2 varchar) with (
  connector = 'kafka',
  topic = 'kafka_1_partition_mv_topic',
  properties.bootstrap.server = 'message_queue:29092',
  scan.startup.mode = 'earliest'
) FORMAT PLAIN ENCODE JSON

statement ok
CREATE SOURCE s7(
    id int,
    code string,
    timestamp bigint,
    xfas struct<device_model_id int, device_make_id int, ip string>[],
    contacts struct<emails string[], phones string[]>)
WITH (
    connector = 'kafka',
    topic = 'json_c',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest')
FORMAT PLAIN ENCODE JSON;

statement ok
create table s8 (v1 int, v2 varchar) with (
  connector = 'kafka',
  topic = 'kafka_4_partition_topic_with_100_message',
  properties.bootstrap.server = 'message_queue:29092',
  scan.startup.mode = 'latest'
) FORMAT PLAIN ENCODE JSON

statement ok
create source s9 (id bytea) with (
  connector = 'kafka',
  topic = 'kafka_source_format_bytes',
  properties.bootstrap.server = 'message_queue:29092',
  scan.startup.mode = 'earliest'
) FORMAT PLAIN ENCODE BYTES

statement ok
create source s10 (v1 int, v2 varchar)
include timestamp as some_ts
with (
  connector = 'kafka',
  topic = 'kafka_1_partition_topic',
  properties.bootstrap.server = 'message_queue:29092',
  scan.startup.mode = 'earliest'
) FORMAT PLAIN ENCODE JSON

query IT rowsort
select * from s1
----
1 1
2 22
3 333
4 4444

query IT rowsort
select * from s1 where _rw_kafka_timestamp > '1977-01-01 00:00:00+00:00'
----
1 1
2 22
3 333
4 4444

query IT rowsort
select * from s1 where _rw_kafka_timestamp > '1977-01-01 00:00:00'
----
1 1
2 22
3 333
4 4444

query IT rowsort
select * from s1 where _rw_kafka_timestamp > TO_TIMESTAMP('1977-01-01 00:00:00.000000', 'YYYY-MM-DD HH24:MI:SS.US')
----
1 1
2 22
3 333
4 4444

statement error expected format
select * from s1 where _rw_kafka_timestamp > 'abc'

statement error out of range
select * from s1 where _rw_kafka_timestamp < TO_TIMESTAMP(2147483647 + 1)

query IT
select * from s1 where _rw_kafka_timestamp > '2045-01-01 0:00:00+00:00'
----

query B
select _rw_kafka_timestamp > '1977-01-01 00:00:00+00:00' from s1
----
t
t
t
t

query B
select _rw_kafka_timestamp < now() from s1
----
t
t
t
t

query B
select _rw_kafka_timestamp < now() - interval '1 day' from s1
----
f
f
f
f

query IT rowsort
select * from s1 limit 2
----
1 1
2 22

statement ok
drop source s1

query IT rowsort
select * from s2
----
1 1
2 22
3 333
4 4444

statement ok
drop source s2

query IT rowsort
select * from s3
----
1 1
2 22
3 333
4 4444

statement ok
drop source s3

query IT rowsort
select * from s4
----
1 1
2 22
3 333
4 4444

statement ok
drop source s4

query I
select count(*) from s5
----
100

statement ok
drop table s5

query I
select count(*) from s6
----
20

statement ok
drop source s6

query ITITT
select id, code, timestamp, xfas, contacts from s7;
----
100 abc 1473305798 {"(0,200,10.0.0.1)","(1,400,10.0.0.2)"} ("{1xxx,2xxx}","{1xxx,2xxx}")

statement ok
drop source s7

query I
select count(*) from s8
----
0

query I
select id from s9 order by id
----
\x6b6b
\x776561776566776566

# query from a kafka timestamp column with alias
query IT rowsort
select v1, v2 from s10 where some_ts > '1977-01-01 00:00:00+00:00'
----
1 1
2 22
3 333
4 4444

statement ok
drop table s8

statement ok
drop source s9

statement ok
drop source s10
