statement ok
CREATE TABLE customer (
    c_id INTEGER,
    c_d_id INTEGER,
    c_w_id INTEGER,
    c_first VARCHAR,
    c_middle VARCHAR,
    c_last VARCHAR,
    c_street_1 VARCHAR,
    c_street_2 VARCHAR,
    c_city VARCHAR,
    c_state VARCHAR,
    c_zip VARCHAR,
    c_phone VARCHAR,
    c_since TIMESTAMP,
    c_credit VARCHAR,
    c_credit_lim REAL,
    c_discount REAL,
    c_balance REAL,
    c_ytd_payment REAL,
    c_payment_cnt INTEGER,
    c_delivery_cnt INTEGER,
    c_data VARCHAR,
    c_n_nationkey INTEGER,
    PRIMARY KEY (c_id, c_d_id, c_w_id)
) with (
    connector = 'kafka',
    topic = 'customer',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE district (
    d_id INTEGER,
    d_w_id INTEGER,
    d_name VARCHAR,
    d_street_1 VARCHAR,
    d_street_2 VARCHAR,
    d_city VARCHAR,
    d_state VARCHAR,
    d_zip VARCHAR,
    d_tax REAL,
    d_ytd REAL,
    d_next_o_id INTEGER,
    PRIMARY KEY (d_id, d_w_id)
) with (
    connector = 'kafka',
    topic = 'district',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE history (
    h_c_id INTEGER,
    h_c_d_id INTEGER,
    h_c_w_id INTEGER,
    h_d_id INTEGER,
    h_w_id INTEGER,
    h_date VARCHAR,
    h_amount REAL,
    h_data VARCHAR,
    PRIMARY KEY(h_c_id,h_c_d_id,h_c_w_id,h_d_id,h_w_id,h_date,h_amount,h_data)
) with (
    connector = 'kafka',
    topic = 'history',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE item (
    i_id INTEGER,
    i_im_id INTEGER,
    i_name VARCHAR,
    i_price REAL,
    i_data VARCHAR,
    PRIMARY KEY (i_id)
) with (
    connector = 'kafka',
    topic = 'item',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE neworder (
    no_o_id INTEGER,
    no_d_id INTEGER,
    no_w_id INTEGER,
    PRIMARY KEY (no_o_id, no_d_id, no_w_id)
) with (
    connector = 'kafka',
    topic = 'neworder',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE orderline (
    ol_o_id INTEGER,
    ol_d_id INTEGER,
    ol_w_id INTEGER,
    ol_number INTEGER,
    ol_i_id INTEGER,
    ol_supply_w_id INTEGER,
    ol_delivery_d VARCHAR,
    ol_quantity INTEGER,
    ol_amount DECIMAL,
    ol_dist_info VARCHAR,
    PRIMARY KEY (ol_o_id, ol_d_id, ol_w_id, ol_number)
) with (
    connector = 'kafka',
    topic = 'orderline',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE orders (
    o_id INTEGER,
    o_d_id INTEGER,
    o_w_id INTEGER,
    o_c_id INTEGER,
    o_entry_d VARCHAR,
    o_carrier_id INTEGER,
    o_ol_cnt INTEGER,
    o_all_local INTEGER,
    PRIMARY KEY (o_id, o_d_id, o_w_id)
) with (
    connector = 'kafka',
    topic = 'orders',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE stock (
    s_i_id INTEGER,
    s_w_id INTEGER,
    s_quantity INTEGER,
    s_dist_01 VARCHAR,
    s_dist_02 VARCHAR,
    s_dist_03 VARCHAR,
    s_dist_04 VARCHAR,
    s_dist_05 VARCHAR,
    s_dist_06 VARCHAR,
    s_dist_07 VARCHAR,
    s_dist_08 VARCHAR,
    s_dist_09 VARCHAR,
    s_dist_10 VARCHAR,
    s_ytd INTEGER,
    s_order_cnt INTEGER,
    s_remote_cnt INTEGER,
    s_data VARCHAR,
    s_su_suppkey INTEGER,
    PRIMARY KEY (s_i_id, s_w_id)
) with (
    connector = 'kafka',
    topic = 'stock',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE warehouse (
    w_id INTEGER,
    w_name VARCHAR,
    w_street_1 VARCHAR,
    w_street_2 VARCHAR,
    w_city VARCHAR,
    w_state VARCHAR,
    w_zip VARCHAR,
    w_tax REAL,
    w_YTD REAL,
    PRIMARY KEY (w_id)
) with (
    connector = 'kafka',
    topic = 'warehouse',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE supplier (
    SU_SUPPKEY SMALLINT,
    SU_NAME VARCHAR,
    SU_ADDRESS VARCHAR,
    SU_NATIONKEY INTEGER,
    SU_PHONE VARCHAR,
    SU_ACCTBAL REAL,
    SU_COMMENT VARCHAR,
    PRIMARY KEY(SU_SUPPKEY)
) with (
    connector = 'kafka',
    topic = 'supplier',
    properties.bootstrap.server = 'message_queue:29092',
    scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE region (
    R_REGIONKEY INTEGER,
    R_NAME VARCHAR,
    R_COMMENT VARCHAR,
    PRIMARY KEY (R_REGIONKEY)
) with (
     connector = 'kafka',
     topic = 'region',
     properties.bootstrap.server = 'message_queue:29092',
     scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;

statement ok
CREATE TABLE nation (
    N_NATIONKEY INTEGER,
    N_NAME VARCHAR,
    N_REGIONKEY INTEGER,
    N_COMMENT VARCHAR,
    PRIMARY KEY (N_NATIONKEY)
) with (
     connector = 'kafka',
     topic = 'nation',
     properties.bootstrap.server = 'message_queue:29092',
     scan.startup.mode = 'earliest'
) FORMAT DEBEZIUM ENCODE JSON;
