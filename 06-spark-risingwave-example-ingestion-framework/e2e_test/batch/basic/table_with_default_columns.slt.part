statement ok
SET RW_IMPLICIT_FLUSH TO true;

statement ok
create table t1 (v1 int, v2 int default 2+3);

statement ok
insert into t1 values (0, 0);

query II
select * from t1;
----
0 0

statement ok
insert into t1 values (1);

query II
select * from t1 where v1 = 1;
----
1 5

statement ok
update t1 set v2 = default where v1 = 0;

query II
select * from t1 where v1 = 0;
----
0 5

statement error
update t1 set (v1, v2) = (0, default);

statement ok
alter table t1 add column v3 int default 3;

query III rowsort
select * from t1;
----
0 5 3
1 5 3

statement ok
insert into t1 values (233, 233, null);

query III rowsort
select * from t1;
----
0 5 3
1 5 3
233 233 NULL

statement ok
alter table t1 add column v4 int default 4;

query IIII rowsort
select * from t1;
----
0 5 3 4
1 5 3 4
233 233 NULL 4

statement ok
create table t2 (v1 int, v2 int default 1.5);

statement ok
insert into t2 values (1), (2);

query II rowsort
select * from t2;
----
1 2
2 2

# `now()` as default value
statement ok
alter table t2 add column v3 timestamp with time zone default now();

query IT rowsort
select v1, v3 >= date '2021-01-01' as later_than_2021 from t2;
----
1 t
2 t

# `now()` filled for historical data should be the same
query II
select max(v1), count(*) from t2 group by v3 order by v3;
----
2 2

statement ok
flush;

statement ok
insert into t2 values (3);

# Newly inserted record should have a later timestamp
query II
select max(v1), count(*) from t2 group by v3 order by v3;
----
2 2
3 1

# Historical data can be correctly updated
statement ok
update t2 set v3 = '2000-01-01 00:00:00+00:00' where v1 = 1;

query II
select max(v1), count(*) from t2 group by v3 order by v3;
----
1 1
2 1
3 1

statement ok
drop table t1;

statement ok
drop table t2;
