# Copied from https://github.com/duckdb/duckdb (MIT licensed).
# Copyright 2018-2022 Stichting DuckDB Foundation

# name: test/sql/limit/test_parallel_limit_nulls.test_slow
# description: Test parallel limit execution with NULLs
# group: [limit]

statement ok
SET RW_IMPLICIT_FLUSH TO true;

statement ok
CREATE TABLE other_table (i int);

statement ok
insert into other_table values (337), (948), (1779), (4779);

statement ok
CREATE TABLE integers (i int, k int);

statement ok
INSERT INTO integers SELECT i, CASE WHEN i%2=0 THEN NULL ELSE i END AS k FROM generate_series(0, 10000, 1) tbl(i);

query I
SELECT k FROM integers order by i LIMIT 5
----
NULL
1
NULL
3
NULL

query I
SELECT k FROM integers WHERE i>1978 OR i=334 order by i LIMIT 5
----
NULL
1979
NULL
1981
NULL

query I
SELECT k FROM integers WHERE i>1978 order by i LIMIT 5
----
1979
NULL
1981
NULL
1983

query I
SELECT k FROM integers WHERE i>4978 order by i LIMIT 5
----
4979
NULL
4981
NULL
4983

# large offset
query I
SELECT k FROM integers WHERE i>4978 order by i LIMIT 5 OFFSET 100;
----
5079
NULL
5081
NULL
5083

query I
SELECT k FROM integers WHERE i>4978 order by i LIMIT 5 OFFSET 1000;
----
5979
NULL
5981
NULL
5983

# IN-clause (semi join)
query I rowsort
SELECT k FROM integers WHERE i IN (SELECT * FROM other_table)
----
1779
337
4779
NULL

statement ok
DROP table integers

statement ok
DROP table other_table
