# Copied from https://github.com/duckdb/duckdb (MIT licensed).
# Copyright 2018-2022 Stichting DuckDB Foundation

# description: Test limit with preserve insertion order disabled
# group: [limit]

statement ok
SET RW_IMPLICIT_FLUSH TO true;

statement ok
CREATE TABLE integers (i int);

statement ok
INSERT INTO integers SELECT 1 FROM generate_series(0, 9999, 1) tbl(i);


query III
SELECT MIN(i), MAX(i), COUNT(*) FROM integers
----
1	1	10000

query I
SELECT * FROM integers LIMIT 5
----
1
1
1
1
1

query I
SELECT * FROM integers LIMIT 5 OFFSET 5000
----
1
1
1
1
1

statement ok
CREATE TABLE integers2 (i int);

statement ok
INSERT INTO integers2 SELECT * FROM generate_series(0, 9999, 1) tbl(i);

query III
SELECT MIN(i), MAX(i), COUNT(*) FROM integers2
----
0	9999	10000

# we need a rowsort here because we don't preserve insertion order
# note that rowsort is a string-based sort
query I rowsort
SELECT * FROM integers2 WHERE i IN (337, 1957, 4425, 9943)
----
1957
337
4425
9943

# when insertion order is disabled, there is no guarantee on which tuples come out of a LIMIT clause
# for the LIMIT test select everything
query I rowsort
SELECT * FROM integers2 WHERE i IN (337, 1957, 4425, 9943) LIMIT 4
----
1957
337
4425
9943

statement ok
DROP TABLE integers2

statement ok
DROP TABLE integers;
