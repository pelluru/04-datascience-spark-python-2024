- name: test functional dependency for order key pruning (order by - prefix fd)
  sql: |
    create table t1 (id int primary key, i int);
    select id, i from t1 order by id, i limit 2;
  expected_outputs:
    - logical_plan
    - stream_plan
    - batch_plan

# Order key should not be pruned for suffix functional dependency.
- name: test functional dependency for order key pruning (order by - suffix fd)
  sql: |
    create table t1 (id int primary key, i int);
    select id, i from t1 order by i, id limit 2;
  expected_outputs:
    - logical_plan
    - stream_plan
    - batch_plan
# Order key should not be pruned for suffix functional dependency.
- name: test functional dependency for order key pruning on singleton
  sql: |
    create table t1 (id int primary key, i int);
    create materialized view v as select count(*) cnt from t1;
    select cnt from v order by cnt;
  expected_outputs:
    - logical_plan
    - stream_plan
    - batch_plan
# Order key should not be pruned for index,
# since it uses it as distribution key as well.
- name: test functional dependency for order key pruning (index)
  sql: |
    create table t1 (v1 int, v2 int);
    create materialized view v as select count(*) cnt from t1;
    explain (verbose) create index mv_idx on v(cnt);
  expected_outputs:
    - explain_output
- name: test functional dependency for order key pruning (index 2)
  sql: |
    create table t1 (v1 int primary key, v2 int);
    explain (verbose) create index mv_idx on t1(v1, v2);
  expected_outputs:
    - explain_output
- name: test functional dependency for order key pruning (index 3)
  sql: |
    create table t1 (v1 int primary key, v2 int);
    explain (verbose) create index mv_idx on t1(v2, v1);
  expected_outputs:
    - explain_output
