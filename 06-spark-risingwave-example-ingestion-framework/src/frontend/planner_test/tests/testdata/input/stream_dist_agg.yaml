- id: create_tables
  sql: |
    /* T: updatable; Tk: Hash(k) distribution; AO: append-only; S: single distribution */
    create table T  (k int, v int, o int, s varchar);
    create index Tk on T(k) include(k, v, o, s);
    create materialized view S as select * from T order by o limit 100;
    create table AO (k int, v int, o int, s varchar) append only;
  expected_outputs: []
- id: extreme_on_single
  before:
  - create_tables
  sql: |
    select max(v) as a1 from S;
  expected_outputs:
  - batch_plan
  - stream_plan
  - stream_dist_plan
- id: sum_on_single
  before:
  - create_tables
  sql: |
    select sum(v) as a1 from S;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
  - batch_plan
- id: cnt_on_single
  before:
  - create_tables
  sql: |
    select count(v) as a1 from S;
  expected_outputs:
  - stream_dist_plan
  - batch_plan
  - stream_plan
- id: string_agg_on_single
  before:
  - create_tables
  sql: |
    select string_agg(s, ',' order by v) as a1 from S;
  expected_outputs:
  - batch_plan
  - stream_plan
  - stream_dist_plan
- id: extreme_on_T
  before:
  - create_tables
  sql: |
    select max(v) as a1 from T;
  expected_outputs:
  - stream_dist_plan
  - batch_plan
  - stream_plan
- id: extreme_on_AO
  before:
  - create_tables
  sql: |
    select max(v) as a1 from AO;
  expected_outputs:
  - stream_dist_plan
  - stream_plan
- id: sum_on_T
  before:
  - create_tables
  sql: |
    select sum(v) as a1 from T;
  expected_outputs:
  - stream_dist_plan
  - stream_plan
  - batch_plan
- id: sum_on_AO
  before:
  - create_tables
  sql: |
    select sum(v) as a1 from AO;
  expected_outputs:
  - stream_dist_plan
  - stream_plan
- id: cnt_on_T
  before:
  - create_tables
  sql: |
    select count(v) as a1 from T;
  expected_outputs:
  - batch_plan
  - stream_dist_plan
  - stream_plan
- id: cnt_on_AO
  before:
  - create_tables
  sql: |
    select count(v) as a1 from AO;
  expected_outputs:
  - stream_dist_plan
  - stream_plan
- id: string_agg_on_T
  before:
  - create_tables
  sql: |
    select string_agg(s, ',' order by o) as a1 from T;
  expected_outputs:
  - stream_dist_plan
  - stream_plan
  - batch_plan
- id: string_agg_on_AO
  before:
  - create_tables
  sql: |
    select string_agg(s, ',' order by o) as a1 from AO;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
- id: extreme_count_on_T
  before:
  - create_tables
  sql: |
    select max(v) as a1, count(v) as a2 from T;
  expected_outputs:
  - batch_plan
  - stream_plan
  - stream_dist_plan
- id: extreme_count_on_AO
  before:
  - create_tables
  sql: |
    select max(v) as a1, count(v) as a2 from AO;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
- id: count_string_agg_on_T
  before:
  - create_tables
  sql: |
    select count(v) as a1, string_agg(s, ',' order by o) as a2 from T;
  expected_outputs:
  - batch_plan
  - stream_plan
  - stream_dist_plan
- id: count_string_agg_on_AO
  before:
  - create_tables
  sql: |
    select count(v) as a1, string_agg(s, ',' order by o) as a2 from AO;
  expected_outputs:
  - stream_dist_plan
  - stream_plan
- id: extreme_string_agg_on_T
  before:
  - create_tables
  sql: |
    select max(v) as a1, string_agg(s, ',' order by o) as a2 from T;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
  - batch_plan
- id: extreme_string_agg_on_AO
  before:
  - create_tables
  sql: |
    select max(v) as a1, string_agg(s, ',' order by o) as a2 from AO;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
- id: extreme_on_T_by_k
  before:
  - create_tables
  sql: |
    select max(v) as a1 from T group by k;
  expected_outputs:
  - stream_dist_plan
  - batch_plan
  - stream_plan
- id: extreme_on_Tk_by_k
  before:
  - create_tables
  sql: |
    select max(v) as a1 from Tk group by k;
  expected_outputs:
  - batch_plan
  - stream_plan
  - stream_dist_plan
- id: extreme_on_S_by_k
  before:
  - create_tables
  sql: |
    select max(v) as a1 from S group by k;
  expected_outputs:
  - stream_dist_plan
  - batch_plan
  - stream_plan
- id: extreme_on_AO_by_k
  before:
  - create_tables
  sql: |
    select max(v) as a1 from AO group by k;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
- id: sum_on_T_by_k
  before:
  - create_tables
  sql: |
    select sum(v) as a1 from T group by k;
  expected_outputs:
  - stream_dist_plan
  - batch_plan
  - stream_plan
- id: sum_on_Tk_by_k
  before:
  - create_tables
  sql: |
    select sum(v) as a1 from Tk group by k;
  expected_outputs:
  - stream_dist_plan
  - batch_plan
  - stream_plan
- id: sum_on_S_by_k
  before:
  - create_tables
  sql: |
    select sum(v) as a1 from S group by k;
  expected_outputs:
  - batch_plan
  - stream_plan
  - stream_dist_plan
- id: sum_on_AO_by_k
  before:
  - create_tables
  sql: |
    select sum(v) as a1 from AO group by k;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
- id: cnt_on_T_by_k
  before:
  - create_tables
  sql: |
    select count(v) as a1 from T group by k;
  expected_outputs:
  - batch_plan
  - stream_plan
  - stream_dist_plan
- id: cnt_on_Tk_by_k
  before:
  - create_tables
  sql: |
    select count(v) as a1 from Tk group by k;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
  - batch_plan
- id: cnt_on_S_by_k
  before:
  - create_tables
  sql: |
    select count(v) as a1 from S group by k;
  expected_outputs:
  - stream_dist_plan
  - batch_plan
  - stream_plan
- id: cnt_on_AO_by_k
  before:
  - create_tables
  sql: |
    select count(v) as a1 from AO group by k;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
- id: string_agg_on_T_by_k
  before:
  - create_tables
  sql: |
    select string_agg(s, ',' order by o) as a1 from T group by k;
  expected_outputs:
  - batch_plan
  - stream_plan
  - stream_dist_plan
- id: string_agg_on_Tk_by_k
  before:
  - create_tables
  sql: |
    select string_agg(s, ',' order by o) as a1 from Tk group by k;
  expected_outputs:
  - batch_plan
  - stream_plan
  - stream_dist_plan
- id: string_agg_on_S_by_k
  before:
  - create_tables
  sql: |
    select string_agg(s, ',' order by o) as a1 from S group by k;
  expected_outputs:
  - stream_dist_plan
  - batch_plan
  - stream_plan
- id: string_agg_on_AO_by_k
  before:
  - create_tables
  sql: |
    select string_agg(s, ',' order by o) as a1 from AO group by k;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
