- sql: |
    create table t1 (a int, b numeric, c bigint);
    create table t2 (a int, b numeric, c bigint);
    select * from t1 union all select * from t2;
  expected_outputs:
  - batch_plan
  - stream_plan
  - stream_dist_plan
- sql: |
    create table t1 (a int, b numeric, c bigint);
    create table t2 (a int, b numeric, c bigint);
    select * from t1 union select * from t2;
  expected_outputs:
  - stream_plan
  - stream_dist_plan
  - batch_plan
  - optimized_logical_plan_for_batch
- sql: |
    create table t1 (a int, b numeric, c bigint, primary key(a));
    create table t2 (a int, b numeric, c bigint, primary key(a));
    select * from t1 union select * from t2;
  expected_outputs:
  - stream_dist_plan
  - optimized_logical_plan_for_batch
  - batch_plan
  - stream_plan
- sql: |
    create table t1 (a int, b numeric, c bigint);
    create table t2 (a int, b numeric, c bigint);
    (select * from t1 limit 1) union (select * from t2 limit 1);
  expected_outputs:
  - optimized_logical_plan_for_batch
  - batch_plan
- sql: |
    create table t1 (a int, b numeric, c bigint);
    create table t2 (a int, b numeric, c bigint);
    select a from ((select * from t1 limit 1) union (select * from t2 limit 1)) T;
  expected_outputs:
  - batch_plan
  - optimized_logical_plan_for_batch
- sql: |
    select 1 union all select 1
  expected_outputs:
  - batch_plan
  - optimized_logical_plan_for_batch
- sql: |
    select 1 union all select 2 union all select 3 union all select 4 union all select 5
  expected_outputs:
  - batch_plan
  - optimized_logical_plan_for_batch
- sql: |
    select 1 union select 2 union select 3 union select 4 union select 5 union select 5
  expected_outputs:
  - batch_plan
  - optimized_logical_plan_for_batch
- name: test merged union stream key (2 columns, row_id + src_col)
  sql: |
    create table t1 (a int, b numeric, c bigint);
    create table t2 (a int, b numeric, c bigint);
    create table t3 (a int, b numeric, c bigint);
    create table t4 (a int, b numeric, c bigint);
    create table t5 (a int, b numeric, c bigint);
    select * from t1 union all select * from t2 union all select * from t3 union all select * from t4 union all select * from t5;
  expected_outputs:
    - batch_plan
    - stream_plan
    - stream_dist_plan
- name: test merged union stream key (5 columns, row_id + src_col + a + b + c)
  sql: |
    create table t1 (a int, b numeric, c bigint, primary key (a));
    create table t2 (a int, b numeric, c bigint, primary key (b));
    create table t3 (a int, b numeric, c bigint, primary key (c));
    create table t4 (a int, b numeric, c bigint);
    create table t5 (a int, b numeric, c bigint, primary key (a, b));
    select * from t1 union all select * from t2 union all select * from t3 union all select * from t4 union all select * from t5;
  expected_outputs:
    - stream_dist_plan
- name: test merged union stream key (4 columns, row_id + src_col + a + b)
  sql: |
    create table t1 (a int, b numeric, c bigint, primary key (a));
    create table t2 (a int, b numeric, c bigint, primary key (b));
    create table t3 (a int, b numeric, c bigint);
    create table t4 (a int, b numeric, c bigint);
    create table t5 (a int, b numeric, c bigint, primary key (a, b));
    select * from t1 union all select * from t2 union all select * from t3 union all select * from t4 union all select * from t5;
  expected_outputs:
    - stream_dist_plan
- name: test merged union stream key (3 columns, src_col + a + b)
  sql: |
    create table t1 (a int, b numeric, c bigint, primary key (a));
    create table t2 (a int, b numeric, c bigint, primary key (b));
    create table t3 (a int, b numeric, c bigint, primary key (b));
    create table t4 (a int, b numeric, c bigint, primary key (b, a));
    create table t5 (a int, b numeric, c bigint, primary key (a, b));
    select * from t1 union all select * from t2 union all select * from t3 union all select * from t4 union all select * from t5;
  expected_outputs:
    - stream_dist_plan

- name: test corresponding union
  sql: |
    create table t1 (a int, b numeric, c bigint);
    create table t2 (a int, b numeric, y bigint);
    create table t3 (x int, b numeric, c bigint);
    select * from t1 union corresponding select * from t2 union all corresponding by (b) select * from t3;
  expected_outputs:
    - batch_plan
    - stream_plan
    - stream_dist_plan

- name: test corresponding union error - corresponding list
  sql: |
    create table t1 (a int, b numeric, c bigint);
    create table t2 (a int, b numeric, y bigint);
    create table t3 (x int, b numeric, c bigint);
    select * from t1 union corresponding select * from t2 union all corresponding by (c) select * from t3;
  expected_outputs:
    - binder_error

- name: test corresponding union error - duplicate names
  sql: |
    create table t1 (a int, b numeric, c bigint);
    create table t2 (a int, b numeric, y bigint);
    select a, b as a from t1 union corresponding select * from t2;
  expected_outputs:
    - binder_error