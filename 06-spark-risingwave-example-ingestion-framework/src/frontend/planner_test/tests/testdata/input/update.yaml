- sql: |
    create table t (v1 int, v2 int);
    update t set v1 = 0;
  expected_outputs:
  - batch_plan
- sql: |
    create table t (v1 int, v2 int);
    update t set v1 = true;
  expected_outputs:
  - binder_error
- sql: |
    create table t (v1 int, v2 int);
    update t set v1 = v2 + 1;
  expected_outputs:
  - batch_plan
- sql: |
    create table t (v1 int, v2 real);
    update t set v1 = v2;
  expected_outputs:
  - batch_plan
- sql: |
    create table t (v1 int, v2 real);
    update t set v1 = DEFAULT;
  expected_outputs:
  - batch_plan
- sql: |
    create table t (v1 int, v2 int);
    update t set v1 = v2 + 1 where v2 > 0;
  expected_outputs:
  - batch_plan
- sql: |
    create table t (v1 int, v2 int);
    update t set (v1, v2) = (v2 + 1, v1 - 1) where v1 != v2;
  expected_outputs:
  - batch_plan
- sql: |
    create table t (v1 int, v2 int);
    update t set (v1, v2) = (v2 + 1, v1 - 1) where v1 != v2 returning *, v2+1, v1-1;
  expected_outputs:
  - batch_plan
  - logical_plan
- name: update with returning statement, should keep `Update`
  sql: |
    create table t (v int);
    update t set v = 114 returning 514;
  expected_outputs:
  - logical_plan
  - batch_plan
- sql: |
    create table t (v1 int primary key, v2 int);
    update t set (v2, v1) = (v1, v2);
  expected_outputs:
  - binder_error
- sql: |
    create table t (v1 int default 1+1, v2 int);
    update t set v1 = default;
  expected_outputs:
  - logical_plan
  - batch_plan

- name: update table with generated columns
  sql: |
    create table t(v1 int as v2-1, v2 int, v3 int as v2+1);
    update t set v2 = 3;
  expected_outputs:
  - batch_plan
- name: update generated column
  sql: |
    create table t(v1 int as v2-1, v2 int, v3 int as v2+1);
    update t set v1 = 3;
  expected_outputs:
  - binder_error
- name: update columns references by generated pk
  sql: |
    create table t(v1 int as v2-1, v2 int, v3 int as v2+1, primary key (v3));
    update t set v2 = 3;
  expected_outputs:
  - binder_error
- name: update subquery selection
  sql: |
    create table t (a int, b int);
    update t set a = 777 where b not in (select a from t);
  expected_outputs:
    - logical_plan
    - batch_plan

- name: delete subquery
  sql: |
    create table t (a int, b int);
    delete from t where a not in (select b from t);
  expected_outputs:
    - logical_plan
    - batch_plan
- name: distributed update
  sql: |
    set batch_enable_distributed_dml = true;
    create table t (a int, b int);
    update t set a = a + 1;
  expected_outputs:
    - batch_distributed_plan
- name: update table to subquery
  sql: |
    create table t (v1 int, v2 int);
    update t set v1 = (select 666);
  expected_outputs:
    - batch_plan
- name: update table to subquery with runtime cardinality
  sql: |
    create table t (v1 int, v2 int);
    update t set v1 = (select generate_series(888, 888));
  expected_outputs:
    - batch_plan
- name: update table to correlated subquery
  sql: |
    create table t (v1 int, v2 int);
    update t set v1 = (select count(*) from t as source where source.v2 = t.v2);
  expected_outputs:
    - batch_plan
- name: update table to subquery with multiple assignments
  sql: |
    create table t (v1 int, v2 int);
    update t set (v1, v2) = (select 666.66, 777);
  expected_outputs:
    - batch_plan
