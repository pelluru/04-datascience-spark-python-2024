# This file is automatically generated. See `src/frontend/planner_test/README.md` for more information.
- id: create_table
  sql: |
    create table t1 (c1 INT, c2 INT, c3 INT);
- id: basic_optimizable_pattern
  before:
  - create_table
  sql: |
    select c1 from t1 where not(c1 > 1) and (c1 > 1);
  logical_plan: |-
    LogicalProject { exprs: [t1.c1] }
    └─LogicalFilter { predicate: Not((t1.c1 > 1:Int32)) AND (t1.c1 > 1:Int32) }
      └─LogicalScan { table: t1, columns: [t1.c1, t1.c2, t1.c3, t1._row_id, t1._rw_timestamp] }
  batch_plan: 'BatchValues { rows: [] }'
- id: non_trivial_optimizable_case
  before:
  - create_table
  sql: |
    select
      c1, c2, c3 from t1
    where
      (c1 > 1)
      and (c2 > 2)
      and (c3 > 3)
      and not(c1 < 1)
      and not(c2 < 2)
      and not(c3 < 3)
      and not(c1 > 1 or c2 > 2 or c3 > 3);
  logical_plan: |-
    LogicalProject { exprs: [t1.c1, t1.c2, t1.c3] }
    └─LogicalFilter { predicate: (t1.c1 > 1:Int32) AND (t1.c2 > 2:Int32) AND (t1.c3 > 3:Int32) AND Not((t1.c1 < 1:Int32)) AND Not((t1.c2 < 2:Int32)) AND Not((t1.c3 < 3:Int32)) AND Not((t1.c1 > 1:Int32)) AND Not((t1.c2 > 2:Int32)) AND Not((t1.c3 > 3:Int32)) }
      └─LogicalScan { table: t1, columns: [t1.c1, t1.c2, t1.c3, t1._row_id, t1._rw_timestamp] }
  batch_plan: 'BatchValues { rows: [] }'
- id: corner_case
  before:
  - create_table
  sql: |
    select
      c1, c2, c3 from t1
    where
      not(c1 > 1 or c2 > 2 or c3 > 3)
      and (c1 > 1 or c2 > 2)
      and (c2 > 2 or c3 > 3)
      and (c3 > 3 or c1 > 1)
      and (c1 > 1 or c2 > 2 or c3 > 3);
  logical_plan: |-
    LogicalProject { exprs: [t1.c1, t1.c2, t1.c3] }
    └─LogicalFilter { predicate: Not((t1.c1 > 1:Int32)) AND Not((t1.c2 > 2:Int32)) AND Not((t1.c3 > 3:Int32)) AND ((t1.c1 > 1:Int32) OR (t1.c2 > 2:Int32)) AND ((t1.c2 > 2:Int32) OR (t1.c3 > 3:Int32)) AND ((t1.c3 > 3:Int32) OR (t1.c1 > 1:Int32)) AND (((t1.c1 > 1:Int32) OR (t1.c2 > 2:Int32)) OR (t1.c3 > 3:Int32)) }
      └─LogicalScan { table: t1, columns: [t1.c1, t1.c2, t1.c3, t1._row_id, t1._rw_timestamp] }
  batch_plan: |-
    BatchExchange { order: [], dist: Single }
    └─BatchFilter { predicate: Not((t1.c1 > 1:Int32)) AND Not((t1.c2 > 2:Int32)) AND Not((t1.c3 > 3:Int32)) AND ((t1.c1 > 1:Int32) OR (t1.c2 > 2:Int32)) AND ((t1.c2 > 2:Int32) OR (t1.c3 > 3:Int32)) AND ((t1.c3 > 3:Int32) OR (t1.c1 > 1:Int32)) AND (((t1.c1 > 1:Int32) OR (t1.c2 > 2:Int32)) OR (t1.c3 > 3:Int32)) }
      └─BatchScan { table: t1, columns: [t1.c1, t1.c2, t1.c3], distribution: SomeShard }
